@model WidgetDashboard.DomainModel.Models.WidgetModel
@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    @foreach (var styleReference in Model.Widgets.SelectMany(w => w.StyleReferences).Distinct())
    {
        @Html.Raw("    " + styleReference)
    }
    <!-- widget scripts -->
    @foreach (var widget in Model.Widgets)
    {
        <style>
            @Html.Raw(widget.Style)
        </style>
    }
}

<!-- widgets -->
<div class="grid-stack">

</div>

@section toolboxitems{

    <div>
        @foreach (var widget in Model.Widgets)
        {
            <div class="toolbox-item">
                <i class="fa fa-cube fa-fw"></i>
                &nbsp;
                @widget.Name
                <div class="widget-template" name="@widget.Name" defaultwidth="@widget.Layout.Widh" defaultheight="@widget.Layout.Height" style="display: none">
                    @Html.Raw(widget.Template) <!-- should use api call to reduce page size -->
                </div>
            </div>
        }
    </div>
}


@section scripts{

    <!-- grid stack -->
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gridstack.js/0.3.0/gridstack.all.js"></script>
    <script src="~/Scripts/widget-component.js"></script>
    <script src="~/Scripts/main.js"></script>

    <!-- libraries-->
    @foreach (var scriptReference in Model.Widgets.SelectMany(w => w.ScriptReferences).Distinct())
    {
        @Html.Raw("    " + scriptReference)
    }


    <!-- grid stack -->
    <script type="text/javascript">
        $(function () {
            var options = {
                cell_height: 80,
                vertical_margin: 10,
                float: true
            };
            $('.grid-stack').gridstack(options);
        });
    </script>

    <!-- widget scripts -->
    @foreach (var widget in Model.Widgets)
    {
        <script>
            @Html.Raw(widget.Script)
        </script>
    }


    <script type="text/javascript">

        // configure grid stack
        $(function () {
            var options = {
                cell_height: 40,
                vertical_margin: 10,
                horizontal_margin: 10,
                float: true,
                acceptWidgets: true,
                alwaysShowResizeHandle: true,
                animate: true
            };
            $('.grid-stack').gridstack(options);
        });

        // toolbox item clicked
        $('#toolbox .toolbox-item').click(function () {
            console.log('toolbox item clicked: ' + event.target);

            var clicked = $(event.target);
            var templateElement = clicked.find('.widget-template').first();
            var template = templateElement.html(); // todo: replace by api call

            // dashboard grid
            var grid = $('#mainArea .grid-stack').data('gridstack');

            // wrapper html for gridstack component
            var widgetMarkup = "<div class=\"grid-stack-item\"><div class=\"grid-stack-item-content\"><div class=\"remove-widget\"><i class=\"fa fa-trash-o\"></i></div>" + template + "</div></div>";

            var width = templateElement.attr("defaultwidth");
            var height = templateElement.attr("defaultheight");

            // gridstack api call
            var widget = grid.addWidget(widgetMarkup, 0, 0, width, height);
            var elementToUse = $(widget).find('.widget').first(); // requires widget developer to class their html with .widget

            $(widget).find('.remove-widget').click(function () {
                grid.removeWidget(widget);
            });

            WidgetManager.Instance.createWidget(elementToUse, templateElement.attr("name"));

            WidgetManager.Instance.refreshWidgets(); // todo: this loads all widget data - need to load just created one

        });

    </script>




}